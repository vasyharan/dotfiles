unbind C-b
set -g prefix S-F1
# set -g prefix C-b
set -g base-index 1
unbind-key -n C-b

bind : command-prompt
bind S-F1 last-window
bind r refresh-client

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Easy config reload
bind R source-file ~/.tmux.conf \; \
    display-message "tmux.conf reloaded."

# kill pane/window {{{
unbind x
bind X confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind Q confirm-before -p "kill-window #W? (y/n)" kill-window
# }}}

# select/swap pane {{{
bind w choose-tree -Z "switch-client -t '%%'"
bind O choose-tree -Z "swap-pane -t '%%'"
# }}}

# vi is good {{{
setw -g mode-keys vi
set -sg escape-time 0
# set -sg repeat-time 200
# }}}

# mouse behavior {{{
set -g mouse on
# }}}

# longer history {{{
set -g history-limit 50000
setw -g aggressive-resize on
set -g set-clipboard on
# }}}

# terminal settings {{{
set -g default-terminal xterm-256color
# set -ga terminal-overrides ",xterm-256color:Tc"
# }}}

# status bar {{{
set -g display-time 1000
set -g status-interval 5
set -g status-keys emacs
set -g status-position top
set -g status-justify left
set -g status-left-length 0

# solarized
# STATUS_BG="black"
# STATUS_FG="white"
# STATUS_BG="white"
# STATUS_FG="black"
# LEFT_BG="blue"
# LEFT_FG="brightwhite"
# LEFTHL_BG="brightgreen"
# RIGHT_BG="white"
# RIGHT_FG="black"
# WINDOW_FG=$STATUS_FG
# WINDOW_BG="brightblue"
# WINDOWHL_BG="cyan"
# WINDOWHL_FG=$STATUS_FG
source-file ~/.tmux/theme.conf

setw -g window-status-activity-style none
setw -g window-status-separator ""

set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

set-option -g set-titles on
set-option -g set-titles-string "#S / #W"
# }}}

# window notifications {{{
setw -g monitor-activity on
set -g visual-activity on
bind m setw monitor-activity on
bind M setw monitor-activity off
# }}}

# pane splitting {{{
# use vim-like keys for splits and windows
# bind v split-window -h -c "#{pane_current_path}"
# bind s split-window -v -c "#{pane_current_path}"
bind -r bspace next-layout

bind v split-window -c "#{pane_current_path}" -t :.0 \;\
  swap-pane -s :.0 -t :.1 \;\
  run "~/.tmux/scripts/resize-main-pane" \;\
  select-layout main-vertical

bind s split-window -c "#{pane_current_path}" -t :.0 \;\
  swap-pane -s :.0 -t :.1 \;\
  resize-pane -Z

set-hook -g after-split-window 'run "~/.tmux/scripts/resize-main-pane" ; select-layout main-vertical'
set-hook -g pane-exited 'run "~/.tmux/scripts/resize-main-pane" ; select-layout main-vertical'
# }}}

# window/pane selection {{{
bind -n M-j select-pane -t :.+
bind -n M-k select-pane -t :.-
bind -r M-j rotate-window -U \; select-pane -t 0
bind -r M-k rotate-window -D \; select-pane -t 0
bind -n M-Space swap-pane -s :. -t :.0 \; select-pane -t :.0
bind Space swap-pane -s :. -t :.0 \; select-pane -t :.0

# use vim-like keys for pane navigation
# is_editor="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?((g?(view|n?vim?x?)(diff)?)|(emacsclient|Emacs))$'"
# bind-key -n C-h if-shell "$is_editor" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_editor" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_editor" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_editor" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\\ if-shell "$is_editor" "send-keys C-\\" "select-pane -l"

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 0
# }}}

# copy-paste {{{
bind [ copy-mode
bind ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel

bind -T copy-mode-vi M-j select-pane -t :.+
bind -T copy-mode-vi M-k select-pane -t :.-
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\\ select-pane -l

# }}}

# source local config
if-shell 'test -s "$HOME/.tmux.local.conf"' \
    'source $HOME/.tmux.local.conf'

# Plugins with tmux plugin manager
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-nvim 'session'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set -g @plugin 'seebi/tmux-colors-solarized'
# set -g @colors-solarized 'light'
run '~/.tmux/plugins/tpm/tpm'

unbind C-b
set -g prefix S-F1
# set -g prefix C-b
set -g base-index 1
unbind-key -n C-b

# Easy config reload
bind R source-file ~/.tmux.conf \; \
    display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi
set -sg escape-time 0
# set -sg repeat-time 200

# mouse behavior
set -g mouse on

# longer history
set -g history-limit 50000
setw -g aggressive-resize on
set -g set-clipboard on

# terminal settings
set -g default-terminal screen-256color
set -ga terminal-overrides ",xterm-256color:Tc"

# Status Bar
set -g status-interval 5
set -g status-keys emacs
set -g status-position top
setw -g status-bg colour0
setw -g status-justify left
# setw -g status-bg colour0
setw -g status-fg colour15
setw -g status-left "#{?client_prefix,#[reverse],}#S/#[noreverse] "

setw -g status-right "#(~/.tmux/load_avg_graph.sh) %d/%m/%y %H:%M"

# setw -g window-status-current-fg colour6
setw -g window-status-current-format \
   '*#I:#W#{?window_zoomed_flag,",}'
setw -g window-status-format \
   '#I:#W#{?window_zoomed_flag,",}'

set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

set-option -g set-titles on
set-option -g set-titles-string "#S / #W"

# Solarized Light {{{
# default statusbar colors
set-option -g status-style fg=yellow,bg=white #yellow and base2

# default window title colors
set-window-option -g window-status-style fg=brightyellow,bg=default #base0 and default
#set-window-option -g window-status-style dim

# active window title colors
set-window-option -g window-status-current-style fg=brightred,bg=default #orange and default
#set-window-option -g window-status-current-style bright

# pane border
set-option -g pane-border-style fg=white #base2
set-option -g pane-active-border-style fg=brightcyan #base1

# message text
set-option -g message-style fg=brightred,bg=white #orange and base2

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=white,bg=red #base2, red
# }}}

# Solarized 256 {{{
# default statusbar colors
set-option -g status-style fg=colour136,bg=colour235 #yellow and base02

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default #base0 and default
#set-window-option -g window-status-style dim

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default #orange and default
#set-window-option -g window-status-current-style bright

# pane border
set-option -g pane-border-style fg=colour235 #base02
set-option -g pane-active-border-style fg=colour240 #base01

# message text
set-option -g message-style fg=colour166,bg=colour235 #orange and base02

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red
# }}}

# Solarized Dark {{{
# default statusbar colors
set-option -g status-style fg=yellow,bg=black #yellow and base02

# default window title colors
set-window-option -g window-status-style fg=brightblue,bg=default #base0 and default
#set-window-option -g window-status-style dim

# active window title colors
set-window-option -g window-status-current-style fg=brightred,bg=default #orange and default
#set-window-option -g window-status-current-style bright

# pane border
set-option -g pane-border-style fg=black #base02
set-option -g pane-active-border-style fg=brightgreen #base01

# message text
set-option -g message-style fg=brightred,bg=black #orange and base01

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red
# }}}

# Gruvbox Dark {{{
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1
set-window-option -g window-status-style bg=default,fg=yellow # bg=yellow, fg=bg1
# set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3
set-window-option -g window-status-current-style bg=default,fg=brightgreen # fg=bg1
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1
set-window-option -g clock-mode-colour colour109 #blue
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg
# }}}

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on
bind m setw monitor-activity on
bind M setw monitor-activity off

bind : command-prompt
bind S-F1 last-window
bind r refresh-client

unbind x
bind X confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind Q confirm-before -p "kill-window #W? (y/n)" kill-window

# bind -r bspace next-layout
# bind -n M-o rotate-window
# bind -n M-O resize-pane -Z

# use vim-like keys for splits and windows
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind -r M-H resize-pane -L 1
bind -r M-L resize-pane -R 1
bind -r M-J resize-pane -D 1
bind -r M-K resize-pane -U 1
bind -r C-j swap-pane -D
bind -r C-k swap-pane -U

bind w choose-tree -Z "switch-client -t '%%'"
bind O choose-tree -Z "swap-pane -t '%%'"

# use vim-like keys for pane navigation
is_editor="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?((g?(view|n?vim?x?)(diff)?)|(emacsclient|Emacs))$'"
bind-key -n C-h if-shell "$is_editor" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_editor" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_editor" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_editor" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\\ if-shell "$is_editor" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\\ select-pane -l

setw -g other-pane-height 15
setw -g other-pane-width 80

bind [ copy-mode
bind ] paste-buffer

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 0

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel

# source local config
if-shell 'test -s "$HOME/.tmux.local.conf"' \
    'source $HOME/.tmux.local.conf'

# Plugins with tmux plugin manager
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-copycat'
run '~/.tmux/plugins/tpm/tpm'

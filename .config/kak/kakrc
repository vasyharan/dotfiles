source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug 'andreyorst/plug.kak' noload

add-highlighter global/ number-lines -relative
add-highlighter global/ show-matching
add-highlighter global/ wrap

# space is my leader
map global normal <space> , -docstring 'leader'
map global normal <backspace> <space> -docstring 'remove all sels except main'
map global normal <a-backspace> <a-space> -docstring 'remove main sel'

hook global InsertChar k %{ try %{
    exec -draft hH <a-k>jk<ret> d
    exec <esc>
}}

declare-user-mode comment
map global comment c ':comment-line<ret>' -docstring 'toggle line comment'
map global comment b ':comment-block<ret>' -docstring 'toggle block comment'
map global user c ':enter-user-mode comment<ret>' -docstring 'comment…'

colorscheme gruvbox
plug 'andreyorst/powerline.kak' defer "powerline" %{
    set-option global powerline_shorten_bufname short
    set-option global powerline_separator ''
    set-option global powerline_separator_thin ' '
    powerline-theme gruvbox
} config %{
    powerline-start
}

plug 'lePerdu/kakboard' %{
    hook global WinCreate .* %{ kakboard-enable }
}

plug 'Delapouite/kakoune-registers'
plug 'delapouite/kakoune-buffers' %{
    # hook global WinDisplay .* info-buffers
    map global user b ':enter-buffers-mode<ret>'              -docstring 'buffers…'
    map global user B ':enter-user-mode -lock buffers<ret>'   -docstring 'buffers (lock)…'
}

plug "andreyorst/fzf.kak" %{
    map global normal <c-p> ': fzf-mode<ret>'
} defer "fzf" %{
	  set-option global fzf_preview_pos  'top'
    set-option global fzf_file_command 'rg'
    set-option global fzf_grep_command 'rg'
}

plug 'h-youhei/kakoune-surround' %{
    declare-user-mode surround
    map global surround s ':surround<ret>' -docstring 'surround'
    map global surround c ':change-surround<ret>' -docstring 'change'
    map global surround d ':delete-surround<ret>' -docstring 'delete'
    map global surround t ':select-surrounding-tag<ret>' -docstring 'select tag'
    map global user s ':enter-user-mode surround<ret>' -docstring 'surround…'
}

eval %sh{kak-lsp --kakoune -s $kak_session}
# set global lsp_cmd "kak-lsp -s %val{session} -vvv --log /tmp/kak-lsp.log"
define-command lsp-restart -docstring 'restart the language server' %{ lsp-stop; lsp-start }
hook global WinSetOption filetype=(javascript|typescript) %{
    lsp-enable-window
}

hook global WinCreate ^[^*]+$ %{ editorconfig-load } # no *buffers*

hook global WinSetOption filetype=(javascript|typescript) %{
    set-option buffer formatcmd "npx prettier --stdin-filepath='%val{buffile}'"
    hook buffer BufWritePre .* %{format}
}

hook global WinCreate .*zoolander/.*\.scala %{
    set-option buffer formatcmd "bazel run //src/bash/scalafmt:scalafmt -- path '%val{buffile}'"
    # hook buffer BufWritePre .* %{format}
}

hook global WinCreate .*pay-server/.*\.rb %{
    set-option buffer lintcmd 'run() { cat "$1" | /Users/haran/stripe/pay-server/scripts/bin/rubocop.rb -s "$kak_buffile"; } && run '
    # set-option buffer formatcmd "/Users/haran/stripe/pay-server/scripts/bin/rubocop.rb -a '%val{buffile}'"

    lint-enable
    # hook buffer BufWritePre .* %{format}
}
